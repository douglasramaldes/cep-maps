{"version":3,"sources":["components/icon/index.js","components/card/index.js","components/cepSearch/index.js","helpers/cep.js","components/cepInput/index.js","components/address/index.js","pages/Dashboard/index.js","routes.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["SvgContainer","styled","span","props","size","color","strokeWidth","Icon","className","onClick","dangerouslySetInnerHTML","__html","feather","icons","name","toSvg","width","height","defaultProps","Container","div","IconContainer","Card","handleClick","handleClose","state","showMap","this","children","Component","ContainerSearch","Title","h2","CepSearch","title","isValidCep","cep","test","formatCep","replace","length","charAt","match","substring","Button","button","Input","input","Label","label","CepInput","handleChange","event","onChange","target","value","handleSubmit","e","preventDefault","onSubmit","id","type","placeholder","maxLength","pattern","ContainerAddress","AddressLogradouro","AddressInfos","p","Address","notValid","address","logradouro","bairro","localidade","uf","DivFindCep","BoxIframe","Iframe","DivIframe","FindCep","setState","showCard","notFound","handleCepChange","validationCep","currentCep","fetchJsonp","getAddressByCep","then","response","json","data","erro","catch","err","url","display","withRouter","Routes","path","component","Dashboard","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bb05d21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport feather from \"feather-icons\";\r\n\r\nconst SvgContainer = styled.span`\r\n  display: inline-block;\r\n  width: ${props => props.size}px;\r\n  height: ${props => props.size}px;\r\n  color: ${props => props.color};\r\n  stroke-width: ${props => props.strokeWidth};\r\n`;\r\n\r\nconst Icon = props => (\r\n  <SvgContainer\r\n    className={props.className}\r\n    size={props.size}\r\n    onClick={props.onClick}\r\n    color={props.color}\r\n    strokeWidth={props.strokeWidth}\r\n    dangerouslySetInnerHTML={{\r\n      __html: feather.icons[props.name].toSvg({\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        \"stroke-width\": \"inherit\"\r\n      })\r\n    }}\r\n  />\r\n);\r\n\r\nIcon.propTypes = {\r\n  /** Icon name. See the complete list of icons at https://feathericons.com */\r\n  name: PropTypes.string.isRequired,\r\n  /** Set class name of containing element. */\r\n  className: PropTypes.string,\r\n  /** Any legal CSS color value for the stroke color */\r\n  color: PropTypes.string,\r\n  /** Width and height of the icon in pixels */\r\n  size: PropTypes.number,\r\n  /** Stroke width of the icon in pixels */\r\n  strokeWidth: PropTypes.number\r\n};\r\n\r\nIcon.defaultProps = {\r\n  className: \"\",\r\n  color: \"currentColor\",\r\n  size: 24,\r\n  strokeWidth: 2\r\n};\r\n\r\nexport default Icon;\r\n","import React, { Component } from \"react\";\r\nimport Icon from \"../../components/icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  border: 2px solid #ccc;\r\n  padding: 1rem 2rem;\r\n  position: relative;\r\n  width: 90%;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  position: absolute;\r\n  top: 0.6rem;\r\n  right: 0.6rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMap: true\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.handleClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <IconContainer>\r\n          <Icon name=\"x\" size={35} onClick={this.handleClick} />\r\n        </IconContainer>\r\n        {this.props.children}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerSearch = styled.div`\r\n  background-color: #eee;\r\n  padding: 1rem 2rem;\r\n  margin-bottom: 0.4rem;\r\n  width: 90%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 1.4rem;\r\n`;\r\n\r\nclass CepSearch extends Component {\r\n  render() {\r\n    return (\r\n      <ContainerSearch>\r\n        <Title>{this.props.title}</Title>\r\n        {this.props.children}\r\n      </ContainerSearch>\r\n    );\r\n  }\r\n}\r\nexport default CepSearch;\r\n","function isValidCep(cep) {\r\n  return /\\d{5}-\\d{3}/.test(cep);\r\n}\r\n\r\nfunction formatCep(cep) {\r\n  cep = cep.replace(/[^0-9-]/g, \"\");\r\n\r\n  if (cep.length !== 6 && !cep.charAt(cep.length - 1).match(/\\d/)) {\r\n    cep = cep.substring(0, cep.length - 1);\r\n  }\r\n\r\n  if (/^\\d{6}/.test(cep)) {\r\n    cep = cep.substring(0, 5) + \"-\" + cep.substring(5);\r\n  }\r\n\r\n  return cep;\r\n}\r\n\r\nexport { isValidCep, formatCep };\r\n","import React, { Component } from \"react\";\r\nimport { isValidCep, formatCep } from \"../../helpers/cep\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background-color: #48a3ea;\r\n  border: none;\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  font-weight: bold;\r\n  border-radius: 0.2rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: steelBlue;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.2rem 0.5rem;\r\n  height: 2.1rem;\r\n  color: #333;\r\n  margin-right: 0.6rem;\r\n  border: none;\r\n  border: solid 1px #ccc;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #333;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nclass CepInput extends Component {\r\n  handleChange = event => {\r\n    this.props.onChange(event.target.value);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isValidCep(formatCep(this.props.value))) {\r\n      this.props.onSubmit(formatCep(this.props.value));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Label>CEP</Label>\r\n        <Input\r\n          id=\"CepFormInput\"\r\n          type=\"text\"\r\n          value={formatCep(this.props.value)}\r\n          onChange={this.handleChange}\r\n          placeholder=\"00000-000\"\r\n          maxLength=\"9\"\r\n          pattern=\"^\\d{5}-\\d{3}$\"\r\n        ></Input>\r\n        <Button type=\"submit\">Buscar</Button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CepInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerAddress = styled.div`\r\n  line-height: 0.6;\r\n`;\r\n\r\nconst AddressLogradouro = styled.h2`\r\n  margin: 1%;\r\n`;\r\n\r\nconst AddressInfos = styled.p`\r\n  margin: 1%;\r\n  line-height: 1;\r\n`;\r\n\r\nexport default function Address(props) {\r\n  return (\r\n    <ContainerAddress>\r\n      {props.notValid && (\r\n        <AddressLogradouro>CEP não encontrado</AddressLogradouro>\r\n      )}\r\n      <AddressLogradouro>{props.address.logradouro}</AddressLogradouro>\r\n      <AddressInfos>{props.address.bairro}</AddressInfos>\r\n      <AddressInfos>\r\n        {\" \"}\r\n        {props.address.localidade} - {props.address.uf}\r\n      </AddressInfos>\r\n      <AddressInfos>{props.address.cep}</AddressInfos>\r\n    </ContainerAddress>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Iframe from \"react-iframe\";\r\nimport Card from \"../../components/card\";\r\nimport CepSearch from \"../../components/cepSearch\";\r\nimport CepInput from \"../../components/cepInput\";\r\nimport Address from \"../../components/address\";\r\nimport styled from \"styled-components\";\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport { isValidCep } from \"../../helpers/cep\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst DivFindCep = styled.div`\r\n  width: 90%;\r\n  background: #fff;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst BoxIframe = styled(Iframe)`\r\n  border: 0;\r\n  height: 90%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst DivIframe = styled.div`\r\n  overflow: hidden;\r\n  padding-top: 40.25%;\r\n  position: relative;\r\n`;\r\n\r\nfunction getAddressByCep(value) {\r\n  return fetchJsonp(\r\n    `https://viacep.com.br/ws/${value}/json/?callback=searchCep`\r\n  );\r\n}\r\n\r\nclass FindCep extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      address: \"\",\r\n      cep: \"\",\r\n      showCard: false,\r\n      notFound: false\r\n    };\r\n    this.currentCep = null;\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ showCard: false, value: \"\", notFound: false });\r\n  };\r\n\r\n  handleCepChange = value => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  validationCep = value => {\r\n    if (isValidCep(value) && value !== this.currentCep) {\r\n      this.currentCep = value;\r\n\r\n      getAddressByCep(value)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (data.erro) this.setState({ notFound: true });\r\n          this.setState({ showCard: true, address: data });\r\n        })\r\n        .catch(err => {});\r\n    }\r\n  };\r\n\r\n  handleSubmit = value => {\r\n    this.setState({ notFound: false });\r\n    this.validationCep(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <DivFindCep>\r\n          <CepSearch title=\"Consultar\">\r\n            <CepInput\r\n              value={this.state.value}\r\n              onChange={this.handleCepChange}\r\n              onSubmit={this.handleSubmit}\r\n            />\r\n          </CepSearch>\r\n          {this.state.showCard && (\r\n            <Card showCard={this.state.showCard} handleClose={this.handleClose}>\r\n              <Address\r\n                address={this.state.address}\r\n                notValid={this.state.notFound}\r\n              ></Address>\r\n              <DivIframe>\r\n                <BoxIframe\r\n                  url={`https://www.google.com/maps/embed/v1/search?key=AIzaSyBxp983W4Ppj3r0d6JPBDNkZa2XmHVAeHc&q=${this.state.address.logradouro} ${this.state.address.bairro} ${this.state.address.localidade} ${this.state.address.uf}`}\r\n                  id=\"myId\"\r\n                  display=\"block\"\r\n                />\r\n              </DivIframe>\r\n            </Card>\r\n          )}\r\n        </DivFindCep>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(FindCep);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\n\r\nconst Routes = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={Dashboard} />\r\n      />\r\n      <Route path=\"*\" component={() => <h1>Page not found</h1>} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n  body, html {\r\n    font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\r\n    text-rendering: optimizeLegibility !important;\r\n    -webkit-font-smoothing: antialiased !important;\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-top: 5px\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { Fragment } from \"react\";\nimport Routes from \"./routes\";\nimport GlobalStyle from \"./styles/global\";\n\nconst App = () => (\n  <Fragment>\n    <Routes />\n    <GlobalStyle />\n  </Fragment>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}